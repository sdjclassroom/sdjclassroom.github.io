{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/*!\n * node-minify\n * Copyright(c) 2011-2024 Rodolphe Stoclin\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nimport type { MinifierOptions } from \"@node-minify/types\";\nimport { utils } from \"@node-minify/utils\";\nimport CleanCSS from \"clean-css\";\n\n// type OptionsPossibleCleanCSS = string | boolean | Record<string, string> | { url: string };\n\n// type OptionsCleanCSS = {\n//   // _sourceMap: boolean | { url: string };\n//   // sourceMap: boolean | { url: string };\n//   [Key: string]: OptionsPossibleCleanCSS | Record<string, OptionsPossibleCleanCSS>;\n// };\n\n// type SettingsCleanCSS = {\n//   options: OptionsCleanCSS;\n// };\n\n// type MinifierOptionsCleanCSS = {\n//   settings: SettingsCleanCSS;\n// };\n\n/**\n * Run clean-css.\n * @param settings Clean-css options\n * @param content Content to minify\n * @param callback Callback\n * @param index Index of current file in array\n * @returns Minified content\n */\nconst minifyCleanCSS = ({\n    settings,\n    content,\n    callback,\n    index,\n}: MinifierOptions) => {\n    if (settings?.options?.sourceMap) {\n        settings.options._sourceMap = settings.options.sourceMap;\n        settings.options.sourceMap = true;\n    }\n    const _cleanCSS = new CleanCSS(\n        settings && { returnPromise: false, ...settings.options }\n    ).minify(content ?? \"\");\n    const contentMinified = _cleanCSS.styles;\n    if (\n        _cleanCSS.sourceMap &&\n        typeof settings?.options?._sourceMap === \"object\" &&\n        \"url\" in settings.options._sourceMap\n    ) {\n        utils.writeFile({\n            file:\n                typeof settings.options._sourceMap.url === \"string\"\n                    ? settings.options._sourceMap.url\n                    : \"\",\n            content: _cleanCSS.sourceMap.toString(),\n            index,\n        });\n    }\n    if (settings && !settings.content && settings.output) {\n        settings.output &&\n            utils.writeFile({\n                file: settings.output,\n                content: contentMinified,\n                index,\n            });\n    }\n    if (callback) {\n        return callback(null, contentMinified);\n    }\n    return contentMinified;\n};\n\n/**\n * Expose `minifyCleanCSS()`.\n */\nminifyCleanCSS.default = minifyCleanCSS;\nexport = minifyCleanCSS;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAUA,mBAAsB;AACtB,uBAAqB;AA0BrB,IAAM,iBAAiB,CAAC;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,MAAuB;AACnB,MAAI,UAAU,SAAS,WAAW;AAC9B,aAAS,QAAQ,aAAa,SAAS,QAAQ;AAC/C,aAAS,QAAQ,YAAY;AAAA,EACjC;AACA,QAAM,YAAY,IAAI,iBAAAA;AAAA,IAClB,YAAY,EAAE,eAAe,OAAO,GAAG,SAAS,QAAQ;AAAA,EAC5D,EAAE,OAAO,WAAW,EAAE;AACtB,QAAM,kBAAkB,UAAU;AAClC,MACI,UAAU,aACV,OAAO,UAAU,SAAS,eAAe,YACzC,SAAS,SAAS,QAAQ,YAC5B;AACE,uBAAM,UAAU;AAAA,MACZ,MACI,OAAO,SAAS,QAAQ,WAAW,QAAQ,WACrC,SAAS,QAAQ,WAAW,MAC5B;AAAA,MACV,SAAS,UAAU,UAAU,SAAS;AAAA,MACtC;AAAA,IACJ,CAAC;AAAA,EACL;AACA,MAAI,YAAY,CAAC,SAAS,WAAW,SAAS,QAAQ;AAClD,aAAS,UACL,mBAAM,UAAU;AAAA,MACZ,MAAM,SAAS;AAAA,MACf,SAAS;AAAA,MACT;AAAA,IACJ,CAAC;AAAA,EACT;AACA,MAAI,UAAU;AACV,WAAO,SAAS,MAAM,eAAe;AAAA,EACzC;AACA,SAAO;AACX;AAKA,eAAe,UAAU;AACzB,iBAAS;","names":["CleanCSS"]}