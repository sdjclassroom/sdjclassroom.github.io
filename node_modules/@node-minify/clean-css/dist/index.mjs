var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// src/index.ts
import { utils } from "@node-minify/utils";
import CleanCSS from "clean-css";
var require_src = __commonJS({
  "src/index.ts"(exports, module) {
    var minifyCleanCSS = ({
      settings,
      content,
      callback,
      index
    }) => {
      if (settings?.options?.sourceMap) {
        settings.options._sourceMap = settings.options.sourceMap;
        settings.options.sourceMap = true;
      }
      const _cleanCSS = new CleanCSS(
        settings && { returnPromise: false, ...settings.options }
      ).minify(content ?? "");
      const contentMinified = _cleanCSS.styles;
      if (_cleanCSS.sourceMap && typeof settings?.options?._sourceMap === "object" && "url" in settings.options._sourceMap) {
        utils.writeFile({
          file: typeof settings.options._sourceMap.url === "string" ? settings.options._sourceMap.url : "",
          content: _cleanCSS.sourceMap.toString(),
          index
        });
      }
      if (settings && !settings.content && settings.output) {
        settings.output && utils.writeFile({
          file: settings.output,
          content: contentMinified,
          index
        });
      }
      if (callback) {
        return callback(null, contentMinified);
      }
      return contentMinified;
    };
    minifyCleanCSS.default = minifyCleanCSS;
    module.exports = minifyCleanCSS;
  }
});
export default require_src();
/*!
 * node-minify
 * Copyright(c) 2011-2024 Rodolphe Stoclin
 * MIT Licensed
 */
//# sourceMappingURL=index.mjs.map